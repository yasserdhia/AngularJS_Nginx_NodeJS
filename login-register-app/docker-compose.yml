version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: backend-app
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=password
      - DB_DATABASE=yasserdb
      - JWT_SECRET=your_jwt_secret
      - DB_PORT=3306
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
    # إزالة الـ Volumes لتجنب استبدال ملفات البناء
    # volumes:
    #   - ./backend:/app
    #   - /app/node_modules
    command: nodemon --legacy-watch server.js
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    container_name: frontend-app
    ports:
      - "443:443"
    depends_on:
      - backend
    # إزالة الـ Volumes لتجنب استبدال ملفات البناء
    # volumes:
    #   - ./frontend:/app
    #   - /app/node_modules
    networks:
      - app-network

  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: yasserdb
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
